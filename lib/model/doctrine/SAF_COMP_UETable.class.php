<?php

/**
 * SAF_COMP_UETable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class SAF_COMP_UETable extends Doctrine_Table
{

  /**
   * Returns an instance of this class.
   *
   * @return object SAF_COMP_UETable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('SAF_COMP_UE');
  }  
   
  /**
   * Método que obtiene con PDO todos los compromisos pendientes o terminados 
   * para una determinada unidad.
   * 
   * @param int $id_unidad
   * @param string $status
   * @return resultset
   */
  public function getIndicadorDeCompromisos($id_unidad, $status)
  {
    $conexion = Doctrine_Manager::getInstance()->getConnection("schema_saf");

    $consulta = "
      SELECT comp_ue.status AS STATUS, COUNT (comp_ue.status) AS CANT_COMPROMISO
      FROM SAF_COMP_UE comp_ue    
      WHERE comp_ue.id_ue = '$id_unidad' AND comp_ue.status = '$status'
      GROUP BY comp_ue.status";

    $sentencia = $conexion->execute($consulta);

    return $sentencia->fetchAll(PDO::FETCH_BOTH);
  }
  
  /**
   * Método que toma todas las unidades retornandolas con coma (,)
   * para las categorias del gráfico (indicador) que se genera con HighCharts.
   * 
   * @param Doctrine_Collection SAF_UNIDAD_EQUIPO $unidades
   * @return implode
   */
  public function getCategoriasDelIndicadorDeCompromisos($unidades)
  {
    $data = Array();
    foreach ($unidades as $unidad)
    {
      array_push($data, "'" . $unidad . "'");
    }
    return implode(',', $data);
  }

  /**
   * Método que toma todos los compromisos (cant) adquiridos por las unidades 
   * según el status que se desee, retornandolos con coma (,). 
   * 
   * @param Doctrine_Collection SAF_UNIDAD_EQUIPO $unidades
   * @param string $status
   * @return implode
   */
  public function getSeriesDelIndicadorDeCompromisos($unidades, $status)
  {    
    $data_series = array();

    foreach ($unidades as $unidad)
    {
      $resultset = $this->getIndicadorDeCompromisos($unidad->getId(),$status);

      if ($resultset)
      {
        array_push($data_series, $resultset[0]['CANT_COMPROMISO']);
      }
      else
      {
        array_push($data_series, 0);
      }
    }

    return implode(',', $data_series);
  }
}