<?php

/**
 * SAF_EVENTO_CONVOCATORIATable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class SAF_EVENTO_CONVOCATORIATable extends Doctrine_Table
{

  /**
   * Returns an instance of this class.
   *
   * @return object SAF_EVENTO_CONVOCATORIATable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('SAF_EVENTO_CONVOCATORIA');
  }

  /**
   * Método que obtiene un objeto SAF_EVENTO_CONVOCATORIA según 
   * el id del evento y el id de la convocatoria.
   * 
   * @param int $id_evento
   * @param int $id_convocatoria
   * @return SAF_EVENTO_CONVOCATORIA
   */
  public function getEventoConvocatoria($id_evento, $id_convocatoria)
  {
    return Doctrine_Core::getTable('SAF_EVENTO_CONVOCATORIA')
                    ->createQuery()
                    ->where('id_evento = ?', $id_evento)
                    ->andWhere('id_convocatoria = ?', $id_convocatoria)
                    ->fetchOne();
  }

  /**
   * Método que obtiene un resultset de aquellos eventos que estan pendiente
   * o que no han sido analizados en ningún comité.
   * 
   * @return resultset
   */
  public function getEventosPendientes()
  {
    $conexion = Doctrine_Manager::getInstance()->getConnection("schema_saf");

    $consulta = "
      SELECT EVENTO_CONV.ID_EVENTO
      FROM SAF_EVENTO_CONVOCATORIA EVENTO_CONV, SAF_CONVOCATORIA_CAF CONVOCATORIA
      WHERE ID_EVENTO NOT IN (
          SELECT ID_EVENTO
          FROM SAF_EVENTO_CONVOCATORIA EVENTO_CONV, SAF_CONVOCATORIA_CAF CONVOCATORIA
          WHERE EVENTO_CONV.STATUS IS NOT NULL AND EVENTO_CONV.ID_CONVOCATORIA = CONVOCATORIA.ID AND DEPARTAMENTO = 'IOD'
          GROUP BY ID_EVENTO
          ) AND EVENTO_CONV.ID_CONVOCATORIA = CONVOCATORIA.ID AND DEPARTAMENTO = 'IOD'
          
      GROUP BY ID_EVENTO ";

    $sentencia = $conexion->execute($consulta);

    return $sentencia->fetchAll(PDO::FETCH_BOTH);
  }
}